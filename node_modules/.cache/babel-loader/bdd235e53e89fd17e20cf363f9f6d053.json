{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tiffanymain4/home/Development/code/phase-2-directory/code-challenges/phase-2-hooks-code-challenge-bank-of-flatiron-TiffanyM0/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList({\n  transaction\n}) {\n  _s();\n\n  const [sortOrder, setSortOrder] = useState(\"asc\"); // \"asc\" for ascending, \"desc\" for descending\n\n  const [sortedTransactions, setSortedTransactions] = useState([...transaction]);\n\n  const sortByColumn = columnName => {\n    const sorted = [...sortedTransactions].sort((a, b) => {\n      if (sortOrder === \"asc\") {\n        return a[columnName] > b[columnName] ? 1 : -1;\n      } else {\n        return a[columnName] < b[columnName] ? 1 : -1;\n      }\n    });\n    setSortedTransactions(sorted);\n    setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n  };\n\n  const table = transaction.map(item => {\n    return /*#__PURE__*/_jsxDEV(Transaction, {\n      date: item.date,\n      description: item.description,\n      category: item.category,\n      amount: item.amount\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"ui celled striped padded table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), table]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"So5J03Pf4Gokx4T+FOeI3b65Gww=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/tiffanymain4/home/Development/code/phase-2-directory/code-challenges/phase-2-hooks-code-challenge-bank-of-flatiron-TiffanyM0/src/components/TransactionsList.js"],"names":["React","useState","Transaction","TransactionsList","transaction","sortOrder","setSortOrder","sortedTransactions","setSortedTransactions","sortByColumn","columnName","sorted","sort","a","b","table","map","item","date","description","category","amount","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAA2C;AAAA;;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C,CADyC,CACU;;AACnD,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,CAAC,GAAGG,WAAJ,CAAD,CAA5D;;AAEA,QAAMK,YAAY,GAAIC,UAAD,IAAgB;AACnC,UAAMC,MAAM,GAAG,CAAC,GAAGJ,kBAAJ,EAAwBK,IAAxB,CAA6B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpD,UAAIT,SAAS,KAAK,KAAlB,EAAyB;AACvB,eAAOQ,CAAC,CAACH,UAAD,CAAD,GAAgBI,CAAC,CAACJ,UAAD,CAAjB,GAAgC,CAAhC,GAAoC,CAAC,CAA5C;AACD,OAFD,MAEO;AACL,eAAOG,CAAC,CAACH,UAAD,CAAD,GAAgBI,CAAC,CAACJ,UAAD,CAAjB,GAAgC,CAAhC,GAAoC,CAAC,CAA5C;AACD;AACF,KANc,CAAf;AAQAF,IAAAA,qBAAqB,CAACG,MAAD,CAArB;AACAL,IAAAA,YAAY,CAACD,SAAS,KAAK,KAAd,GAAsB,MAAtB,GAA+B,KAAhC,CAAZ;AACD,GAXD;;AAaA,QAAMU,KAAK,GAAGX,WAAW,CAACY,GAAZ,CAAiBC,IAAD,IAAU;AACtC,wBACE,QAAC,WAAD;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,MAAA,WAAW,EAAED,IAAI,CAACE,WAHpB;AAIE,MAAA,QAAQ,EAAEF,IAAI,CAACG,QAJjB;AAKE,MAAA,MAAM,EAAEH,IAAI,CAACI;AALf,OACOJ,IAAI,CAACK,EADZ;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVa,CAAd;AAYA,sBACE;AAAO,IAAA,SAAS,EAAC,gCAAjB;AAAA,2BACE;AAAA,8BACE;AAAA,gCACE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAeGP,KAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAlDQZ,gB;;KAAAA,gB;AAoDT,eAAeA,gBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList({ transaction }) {\n  const [sortOrder, setSortOrder] = useState(\"asc\"); // \"asc\" for ascending, \"desc\" for descending\n  const [sortedTransactions, setSortedTransactions] = useState([...transaction]);\n\n  const sortByColumn = (columnName) => {\n    const sorted = [...sortedTransactions].sort((a, b) => {\n      if (sortOrder === \"asc\") {\n        return a[columnName] > b[columnName] ? 1 : -1;\n      } else {\n        return a[columnName] < b[columnName] ? 1 : -1;\n      }\n    });\n\n    setSortedTransactions(sorted);\n    setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n  };\n\n  const table = transaction.map((item) => {\n    return (\n      <Transaction\n        key={item.id}\n        date={item.date}\n        description={item.description}\n        category={item.category}\n        amount={item.amount}\n      />\n    );\n  })\n\n  return (\n    <table className=\"ui celled striped padded table\">\n      <tbody>\n        <tr>\n          <th>\n            <h3 className=\"ui center aligned header\">Date</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Description</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Category</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Amount</h3>\n          </th>\n        </tr>\n        {table}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}