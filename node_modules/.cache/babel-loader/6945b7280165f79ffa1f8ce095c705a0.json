{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tiffanymain4/home/Development/code/phase-2-directory/code-challenges/phase-2-hooks-code-challenge-bank-of-flatiron-TiffanyM0/src/components/AccountContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    console.log(\"Fetching data with query:\", query);\n    fetch(`http://localhost:8001/transactions?q=${query}`).then(resp => resp.json()).then(data => {\n      console.log(\"Fetched data:\", data);\n      setTransactions(data);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, [query]);\n\n  const searchTransactions = e => setQuery(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      searchT: searchTransactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transaction: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountContainer, \"bbyo2noKzR87TknOUBQrVFBuEtQ=\");\n\n_c = AccountContainer;\nexport default AccountContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"sources":["/home/tiffanymain4/home/Development/code/phase-2-directory/code-challenges/phase-2-hooks-code-challenge-bank-of-flatiron-TiffanyM0/src/components/AccountContainer.js"],"names":["React","useState","useEffect","TransactionsList","Search","AddTransactionForm","AccountContainer","transactions","setTransactions","query","setQuery","console","log","fetch","then","resp","json","data","catch","error","searchTransactions","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCH,KAAzC;AACAI,IAAAA,KAAK,CAAE,wCAAuCJ,KAAM,EAA/C,CAAL,CACGK,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,IAA7B;AACAT,MAAAA,eAAe,CAACS,IAAD,CAAf;AACD,KALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChBR,MAAAA,OAAO,CAACQ,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD,KARH;AASD,GAXQ,EAWN,CAACV,KAAD,CAXM,CAAT;;AAcA,QAAMW,kBAAkB,GAAIC,CAAD,IAAOX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1C;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,gBAAD;AAAkB,MAAA,WAAW,EAAEb;AAA/B;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA3BQD,gB;;KAAAA,gB;AA6BT,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"Fetching data with query:\", query);\n    fetch(`http://localhost:8001/transactions?q=${query}`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        console.log(\"Fetched data:\", data);\n        setTransactions(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, [query]);\n  \n\n  const searchTransactions = (e) => setQuery(e.target.value);\n\n  return (\n    <div>\n      <Search searchT={searchTransactions} />\n      <AddTransactionForm />\n      <TransactionsList transaction={transactions} />\n    </div>\n  );\n}\n\nexport default AccountContainer;\n"]},"metadata":{},"sourceType":"module"}